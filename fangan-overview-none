<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Data Analysis Dashboard</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/echarts@5.4.3/dist/echarts.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/echarts-wordcloud@2.1.0/dist/echarts-wordcloud.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: "Segoe UI", Arial, sans-serif;
        }
        
        body {
            background-color: #f5f7fa;
            padding: 20px;
            color: #333;
        }
        
        .dashboard-container {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        .header {
            text-align: center;
            margin-bottom: 30px;
        }
        
        .header h1 {
            color: #2c3e50;
            font-size: 28px;
            font-weight: 600;
        }
        
        .stats-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .stat-card {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }
        
        .visualization-controls {
            display: flex;
            justify-content: flex-end;
            margin-bottom: 10px;
        }
        
        .visualization-dropdown {
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            background-color: white;
            font-size: 14px;
            cursor: pointer;
            min-width: 150px;
        }
        
        .visualization-dropdown:focus {
            outline: none;
            border-color: #4169E1;
        }
        
        .stat-card h2 {
            font-size: 14px;
            color: #666;
            margin-bottom: 10px;
            text-transform: uppercase;
        }
        
        .stat-value {
            font-size: 32px;
            font-weight: bold;
            margin-bottom: 10px;
        }
        
        .stat-change {
            display: flex;
            align-items: center;
            font-size: 12px;
            color: #666;
        }
        
        .stat-change.positive {
            color: #4CAF50;
        }
        
        .stat-change.negative {
            color: #F44336;
        }
        
        .arrow-up {
            width: 0;
            height: 0;
            border-left: 5px solid transparent;
            border-right: 5px solid transparent;
            border-bottom: 8px solid #4CAF50;
            margin-right: 5px;
        }
        
        .arrow-down {
            width: 0;
            height: 0;
            border-left: 5px solid transparent;
            border-right: 5px solid transparent;
            border-top: 8px solid #F44336;
            margin-right: 5px;
        }
        
        .chart-container {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            margin-bottom: 20px;
        }
        
        .chart-container h2 {
            font-size: 16px;
            margin-bottom: 20px;
            color: #333;
        }
        
        .chart-row {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 15px;
            margin-bottom: 20px;
        }
        
        .pie-charts-container {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 15px;
            margin-bottom: 20px;
        }
        
        .pie-chart {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }
        
        .pie-chart h2 {
            font-size: 16px;
            margin-bottom: 20px;
            color: #333;
        }
        
        .chart-wrapper {
            height: 300px;
        }
        
        .word-cloud-container {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            margin-bottom: 20px;
        }
        
        .word-cloud-container h2 {
            font-size: 16px;
            margin-bottom: 20px;
            color: #333;
        }
        
        .word-cloud {
            height: 400px;
        }
        
        .trend-section {
            margin-bottom: 30px;
        }
        
        .trend-section h3 {
            font-size: 18px;
            color: #2c3e50;
            margin-bottom: 15px;
            border-bottom: 1px solid #eee;
            padding-bottom: 8px;
        }
        
        .trend-list {
            list-style: none;
        }
        
        .trend-list li {
            display: flex;
            justify-content: space-between;
            padding: 10px 0;
            border-bottom: 1px solid #f5f5f5;
        }
        
        .trend-name {
            font-weight: 500;
        }
        
        .trend-value {
            font-weight: 600;
        }
        
        .trend-section:nth-child(1) .trend-value {
            color: #4CAF50;
        }
        
        .trend-section:nth-child(2) .trend-value {
            color: #F44336;
        }
        
        .trend-section:nth-child(3) .trend-value {
            color: #3498db;
        }
        
        @media (max-width: 768px) {
            .stats-container {
                grid-template-columns: repeat(2, 1fr);
            }
            
            .chart-row, .pie-charts-container {
                grid-template-columns: 1fr;
            }
        }
        
        @media (max-width: 480px) {
            .stats-container {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <!-- Data Statistics Cards -->
        <div class="stats-container">
            <div class="stat-card">
                <h2>RESULTS</h2>
                <div class="stat-value">13K</div>
                <div class="stat-change positive">
                    <div class="arrow-up"></div>
                    10.5% compared to previous
                </div>
            </div>
            
            <div class="stat-card">
                <h2>UNIQUE AUTHORS</h2>
                <div class="stat-value">7.1K</div>
                <div class="stat-change positive">
                    <div class="arrow-up"></div>
                    37.2% compared to previous
                </div>
            </div>
            
            <div class="stat-card">
                <h2>ENGAGEMENT</h2>
                <div class="stat-value">2.5M</div>
                <div class="stat-change positive">
                    <div class="arrow-up"></div>
                    3.1% compared to previous
                </div>
            </div>
            
            <div class="stat-card">
                <h2>POTENTIAL REACH</h2>
                <div class="stat-value">1.6B</div>
                <div class="stat-change positive">
                    <div class="arrow-up"></div>
                    2.5% compared to previous
                </div>
            </div>
        </div>
        
        <!-- Time Trend Chart -->
        <div class="chart-container">
            <h2>RESULTS OVER TIME</h2>
            <div class="chart-wrapper">
                <canvas id="timeChart"></canvas>
            </div>
        </div>
        
        <!-- Pie Charts -->
        <div class="pie-charts-container">
            <div class="pie-chart">
                <h2>SHARE OF SENTIMENT</h2>
                <div class="chart-wrapper">
                    <canvas id="sentimentChart"></canvas>
                </div>
            </div>
            
            <div class="pie-chart">
                <h2>SHARE OF COUNTRIES/REGIONS</h2>
                <div class="chart-wrapper">
                    <canvas id="countriesChart"></canvas>
                </div>
            </div>
            
            <div class="pie-chart">
                <h2>SHARE OF LANGUAGES</h2>
                <div class="chart-wrapper">
                    <canvas id="languagesChart"></canvas>
                </div>
            </div>
            
            <div class="pie-chart">
                <h2>SHARE OF MEDIA TYPES</h2>
                <div class="chart-wrapper">
                    <canvas id="mediaTypesChart"></canvas>
                </div>
            </div>
        </div>
        
        <!-- Themes Visualization -->
        <div class="word-cloud-container">
            <h2>THEMES</h2>
            <div class="visualization-controls">
                <select id="visualizationDropdown" class="visualization-dropdown">
                    <option value="wordCloud">Word Cloud</option>
                    <option value="barChart">Bar Chart</option>
                    <option value="table">Table</option>
                    <option value="trendList">Trend List</option>
                    <option value="sunburst">Sunburst</option>
                </select>
            </div>
            <div id="wordCloud" class="word-cloud"></div>
            <div id="barChart" class="chart-wrapper" style="display: none;"></div>
            <div id="themeTable" style="display: none; margin-top: 20px;"></div>
            <div id="trendList" style="display: none; margin-top: 20px;">
                <div class="trend-section">
                    <h3>Emerging Themes</h3>
                    <ul class="trend-list">
                        <li><span class="trend-name">anti-aging</span> <span class="trend-value">+67%</span></li>
                        <li><span class="trend-name">retinol</span> <span class="trend-value">+58%</span></li>
                        <li><span class="trend-name">vitamin c</span> <span class="trend-value">+53%</span></li>
                        <li><span class="trend-name">hyaluronic acid</span> <span class="trend-value">+49%</span></li>
                        <li><span class="trend-name">niacinamide</span> <span class="trend-value">+47%</span></li>
                    </ul>
                </div>
                <div class="trend-section">
                    <h3>Decreasing Themes</h3>
                    <ul class="trend-list">
                        <li><span class="trend-name">refillable</span> <span class="trend-value">-15%</span></li>
                        <li><span class="trend-name">packaging</span> <span class="trend-value">-12%</span></li>
                        <li><span class="trend-name">eco-friendly</span> <span class="trend-value">-10%</span></li>
                        <li><span class="trend-name">sustainable</span> <span class="trend-value">-8%</span></li>
                        <li><span class="trend-name">clean beauty</span> <span class="trend-value">-5%</span></li>
                    </ul>
                </div>
                <div class="trend-section">
                    <h3>New Themes</h3>
                    <ul class="trend-list">
                        <li><span class="trend-name">peptides</span> <span class="trend-value">New</span></li>
                        <li><span class="trend-name">bakuchiol</span> <span class="trend-value">New</span></li>
                        <li><span class="trend-name">ceramides</span> <span class="trend-value">New</span></li>
                        <li><span class="trend-name">cica</span> <span class="trend-value">New</span></li>
                        <li><span class="trend-name">fermented ingredients</span> <span class="trend-value">New</span></li>
                    </ul>
                </div>
            </div>
            <div id="sunburst" class="chart-wrapper" style="display: none;"></div>
        </div>
    </div>
    
    <script>
        // Theme data with sentiment analysis
        const themeData = [
            { name: '#BestofBeauty', value: 100, sentiment: 'positive' },
            { name: 'dianna', value: 80, sentiment: 'neutral' },
            { name: '#cerave', value: 75, sentiment: 'positive' },
            { name: 'gomez', value: 85, sentiment: 'neutral' },
            { name: 'adrienne', value: 70, sentiment: 'neutral' },
            { name: 'beauty', value: 65, sentiment: 'positive' },
            { name: 'skincare', value: 60, sentiment: 'positive' },
            { name: 'makeup', value: 55, sentiment: 'positive' },
            { name: 'routine', value: 50, sentiment: 'neutral' },
            { name: 'review', value: 45, sentiment: 'neutral' },
            { name: 'moisturizer', value: 40, sentiment: 'positive' },
            { name: 'cleanser', value: 35, sentiment: 'positive' },
            { name: 'serum', value: 30, sentiment: 'positive' },
            { name: 'sunscreen', value: 25, sentiment: 'positive' },
            { name: 'hydration', value: 20, sentiment: 'positive' },
            { name: 'glow', value: 15, sentiment: 'positive' },
            { name: 'natural', value: 10, sentiment: 'positive' },
            { name: 'organic', value: 5, sentiment: 'positive' },
            { name: 'vegan', value: 48, sentiment: 'positive' },
            { name: 'cruelty-free', value: 42, sentiment: 'positive' },
            { name: 'anti-aging', value: 67, sentiment: 'positive' },
            { name: 'retinol', value: 58, sentiment: 'positive' },
            { name: 'vitamin c', value: 53, sentiment: 'positive' },
            { name: 'hyaluronic acid', value: 49, sentiment: 'positive' },
            { name: 'niacinamide', value: 47, sentiment: 'positive' },
            { name: 'peptides', value: 38, sentiment: 'positive' },
            { name: 'collagen', value: 36, sentiment: 'positive' },
            { name: 'exfoliation', value: 33, sentiment: 'neutral' },
            { name: 'aha', value: 29, sentiment: 'neutral' },
            { name: 'bha', value: 27, sentiment: 'neutral' },
            { name: 'toner', value: 26, sentiment: 'neutral' },
            { name: 'essence', value: 24, sentiment: 'positive' },
            { name: 'face mask', value: 22, sentiment: 'positive' },
            { name: 'sheet mask', value: 21, sentiment: 'positive' },
            { name: 'eye cream', value: 19, sentiment: 'positive' },
            { name: 'lip balm', value: 18, sentiment: 'positive' },
            { name: 'spf', value: 17, sentiment: 'positive' },
            { name: 'uv protection', value: 16, sentiment: 'positive' },
            { name: 'sensitive skin', value: 14, sentiment: 'negative' },
            { name: 'acne', value: 13, sentiment: 'negative' },
            { name: 'rosacea', value: 12, sentiment: 'negative' },
            { name: 'eczema', value: 11, sentiment: 'negative' },
            { name: 'dermatologist', value: 9, sentiment: 'neutral' },
            { name: 'k-beauty', value: 8, sentiment: 'positive' },
            { name: 'j-beauty', value: 7, sentiment: 'positive' },
            { name: 'clean beauty', value: 6, sentiment: 'positive' },
            { name: 'sustainable', value: 4, sentiment: 'positive' },
            { name: 'eco-friendly', value: 3, sentiment: 'positive' },
            { name: 'packaging', value: 2, sentiment: 'neutral' },
            { name: 'refillable', value: 1, sentiment: 'positive' },
            { name: 'foundation', value: 52, sentiment: 'neutral' },
            { name: 'concealer', value: 46, sentiment: 'neutral' },
            { name: 'blush', value: 44, sentiment: 'positive' },
            { name: 'bronzer', value: 41, sentiment: 'positive' },
            { name: 'highlighter', value: 39, sentiment: 'positive' },
            { name: 'eyeshadow', value: 37, sentiment: 'neutral' },
            { name: 'eyeliner', value: 34, sentiment: 'neutral' },
            { name: 'mascara', value: 32, sentiment: 'positive' },
            { name: 'lipstick', value: 31, sentiment: 'positive' },
            { name: 'lip gloss', value: 28, sentiment: 'positive' },
            { name: 'primer', value: 23, sentiment: 'neutral' },
            { name: 'setting spray', value: 43, sentiment: 'positive' },
            { name: 'brushes', value: 54, sentiment: 'neutral' },
            { name: 'sponge', value: 51, sentiment: 'neutral' },
            { name: 'palette', value: 56, sentiment: 'positive' },
            { name: 'matte', value: 57, sentiment: 'neutral' },
            { name: 'dewy', value: 59, sentiment: 'positive' },
            { name: 'glowy', value: 61, sentiment: 'positive' },
            { name: 'shimmery', value: 62, sentiment: 'positive' },
            { name: 'metallic', value: 63, sentiment: 'positive' },
            { name: 'pigmented', value: 64, sentiment: 'positive' },
            { name: 'buildable', value: 66, sentiment: 'positive' },
            { name: 'long-lasting', value: 68, sentiment: 'positive' },
            { name: 'waterproof', value: 69, sentiment: 'positive' },
            { name: 'sweat-proof', value: 71, sentiment: 'positive' },
            { name: 'transfer-proof', value: 72, sentiment: 'positive' },
            { name: 'crease-proof', value: 73, sentiment: 'positive' },
            { name: 'smudge-proof', value: 74, sentiment: 'positive' },
            { name: 'fragrance-free', value: 76, sentiment: 'positive' },
            { name: 'paraben-free', value: 77, sentiment: 'positive' },
            { name: 'sulfate-free', value: 78, sentiment: 'positive' },
            { name: 'silicone-free', value: 79, sentiment: 'positive' },
            { name: 'alcohol-free', value: 81, sentiment: 'positive' },
            { name: 'oil-free', value: 82, sentiment: 'positive' },
            { name: 'non-comedogenic', value: 83, sentiment: 'positive' },
            { name: 'hypoallergenic', value: 84, sentiment: 'positive' },
            { name: 'dermatologically tested', value: 86, sentiment: 'positive' },
            { name: 'clinically proven', value: 87, sentiment: 'positive' },
            { name: 'luxury', value: 88, sentiment: 'positive' },
            { name: 'affordable', value: 89, sentiment: 'positive' },
            { name: 'drugstore', value: 90, sentiment: 'neutral' },
            { name: 'high-end', value: 91, sentiment: 'positive' },
            { name: 'dupe', value: 92, sentiment: 'neutral' },
            { name: 'trending', value: 93, sentiment: 'positive' },
            { name: 'viral', value: 94, sentiment: 'positive' },
            { name: 'holy grail', value: 95, sentiment: 'positive' },
            { name: 'must-have', value: 96, sentiment: 'positive' },
            { name: 'favorite', value: 97, sentiment: 'positive' },
            { name: 'recommendation', value: 98, sentiment: 'positive' },
            { name: 'haul', value: 99, sentiment: 'positive' }
        ];

        // Time trend chart
        const timeCtx = document.getElementById('timeChart').getContext('2d');
        const timeChart = new Chart(timeCtx, {
            type: 'line',
            data: {
                labels: ['2023-12-25', '2024-01-21', '2024-02-18', '2024-03-16', '2024-04-13', '2024-05-11', '2024-06-08', '2024-07-06', '2024-08-03', '2024-08-31', '2024-09-22'],
                datasets: [{
                    label: 'Results',
                    data: [0, 0, 0, 0, 0, 0, 1000, 2000, 1000, 2000, 5000],
                    fill: true,
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Results'
                        },
                        grid: {
                            color: 'rgba(0, 0, 0, 0.05)'
                        }
                    },
                    x: {
                        grid: {
                            color: 'rgba(0, 0, 0, 0.05)'
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    }
                }
            }
        });
        
        // Calculate sentiment data from themeData for consistency
        const sentimentCounts = themeData.reduce((counts, item) => {
            counts[item.sentiment] = (counts[item.sentiment] || 0) + 1;
            return counts;
        }, {});
        
        const totalTerms = themeData.length;
        const sentimentPercentages = {
            positive: ((sentimentCounts.positive || 0) / totalTerms * 100).toFixed(1),
            neutral: ((sentimentCounts.neutral || 0) / totalTerms * 100).toFixed(1),
            negative: ((sentimentCounts.negative || 0) / totalTerms * 100).toFixed(1)
        };

        // Sentiment chart
        const sentimentCtx = document.getElementById('sentimentChart').getContext('2d');
        const sentimentChart = new Chart(sentimentCtx, {
            type: 'doughnut',
            data: {
                labels: ['Positive', 'Neutral', 'Negative'],
                datasets: [{
                    data: [sentimentPercentages.positive, sentimentPercentages.neutral, sentimentPercentages.negative],
                    backgroundColor: [
                        '#4CAF50',
                        '#FFC107',
                        '#F44336'
                    ],
                    borderWidth: 0
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                },
                cutout: '60%'
            }
        });
        
        // Countries/regions chart
        const countriesCtx = document.getElementById('countriesChart').getContext('2d');
        const countriesChart = new Chart(countriesCtx, {
            type: 'doughnut',
            data: {
                labels: ['United States', 'India', 'South Korea', 'Thailand', 'Brazil', 'Bangladesh', 'Other'],
                datasets: [{
                    data: [34.9, 17.4, 9.6, 8.9, 6.7, 5.8, 16.7],
                    backgroundColor: [
                        '#1E3A8A',
                        '#3B82F6',
                        '#93C5FD',
                        '#EC4899',
                        '#F59E0B',
                        '#10B981',
                        '#6B7280'
                    ],
                    borderWidth: 0
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                },
                cutout: '60%'
            }
        });
        
        // Languages chart
        const languagesCtx = document.getElementById('languagesChart').getContext('2d');
        const languagesChart = new Chart(languagesCtx, {
            type: 'doughnut',
            data: {
                labels: ['English', 'Thai', 'Korean', 'Spanish', 'Portuguese', 'Other'],
                datasets: [{
                    data: [63.5, 17.1, 9.6, 5.2, 2.1, 2.5],
                    backgroundColor: [
                        '#F97316',
                        '#A78BFA',
                        '#3B82F6',
                        '#10B981',
                        '#F59E0B',
                        '#6B7280'
                    ],
                    borderWidth: 0
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                },
                cutout: '60%'
            }
        });
        
        // Media types chart
        const mediaTypesCtx = document.getElementById('mediaTypesChart').getContext('2d');
        const mediaTypesChart = new Chart(mediaTypesCtx, {
            type: 'doughnut',
            data: {
                labels: ['X', 'YouTube', 'TikTok', 'Instagram', 'Facebook', 'Other'],
                datasets: [{
                    data: [43, 24.3, 9.7, 7.6, 5.9, 9.5],
                    backgroundColor: [
                        '#000000',
                        '#FF0000',
                        '#25F4EE',
                        '#E1306C',
                        '#1877F2',
                        '#6B7280'
                    ],
                    borderWidth: 0
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                },
                cutout: '60%'
            }
        });

        
        // Word cloud variables
        let wordCloudChart;
        let wordCloudOption;
        
        // Initialize word cloud after all scripts are loaded
        function initWordCloud() {
            wordCloudChart = echarts.init(document.getElementById('wordCloud'));
            wordCloudOption = {
                series: [{
                    type: 'wordCloud',
                    shape: 'circle',
                    left: 'center',
                    top: 'center',
                    width: '90%',
                    height: '90%',
                    right: null,
                    bottom: null,
                    sizeRange: [12, 60],
                    rotationRange: [-45, 45],
                    rotationStep: 15,
                    gridSize: 8,
                    drawOutOfBound: false,
                    layoutAnimation: true,
                    textStyle: {
                        fontFamily: 'Arial, sans-serif',
                        fontWeight: 'bold',
                        color: function () {
                            return 'rgb(' + [
                                Math.round(Math.random() * 160),
                                Math.round(Math.random() * 160),
                                Math.round(Math.random() * 160)
                            ].join(',') + ')';
                        }
                    },
                    emphasis: {
                        focus: 'self',
                        textStyle: {
                            shadowBlur: 10,
                            shadowColor: '#333'
                        }
                    },
                    data: themeData
                }]
            };
            
            // Set option and resize
            wordCloudChart.setOption(wordCloudOption);
            wordCloudChart.resize();
        }
        
        // Bar chart - Top Keywords Ranking (Horizontal Layout)
        const barChart = echarts.init(document.getElementById('barChart'));
        
        // Get top 15 keywords sorted by value
        const topKeywords = themeData
            .sort((a, b) => b.value - a.value)
            .slice(0, 15);
        
        // Calculate total mentions for percentage calculation
        const totalMentions = themeData.reduce((sum, item) => sum + item.value, 0);
        
        // Prepare data for horizontal bar chart
        const keywordNames = topKeywords.map(item => item.name);
        const keywordValues = topKeywords.map(item => item.value);
        const keywordPercentages = topKeywords.map(item => ((item.value / totalMentions) * 100).toFixed(1));
        
        // Color mapping based on sentiment
        const getColorBySentiment = (sentiment) => {
            switch(sentiment) {
                case 'positive': return '#4CAF50';
                case 'negative': return '#F44336';
                case 'neutral': return '#FFC107';
                default: return '#2196F3';
            }
        };
        
        const barChartOption = {
            title: {
                text: '热门词汇排行榜',
                left: 'center',
                textStyle: {
                    fontSize: 16,
                    fontWeight: 'bold'
                }
            },
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'shadow'
                },
                formatter: function(params) {
                    const data = params[0];
                    const keyword = topKeywords[data.dataIndex];
                    return `
                        <div style="padding: 10px;">
                            <strong>${keyword.name}</strong><br/>
                            提及次数: ${keyword.value}<br/>
                            占比: ${keywordPercentages[data.dataIndex]}%<br/>
                            情绪: ${keyword.sentiment}
                        </div>
                    `;
                }
            },
            grid: {
                left: '15%',
                right: '15%',
                top: '10%',
                bottom: '5%',
                containLabel: true
            },
            xAxis: {
                type: 'value',
                axisLabel: {
                    formatter: '{value}'
                },
                splitLine: {
                    show: true,
                    lineStyle: {
                        color: '#f0f0f0'
                    }
                }
            },
            yAxis: {
                type: 'category',
                data: keywordNames.reverse(), // Reverse to show highest at top
                axisLabel: {
                    fontSize: 12,
                    color: '#333',
                    interval: 0,
                    formatter: function(value) {
                        return value.length > 8 ? value.substring(0, 8) + '...' : value;
                    }
                },
                axisTick: {
                    show: false
                },
                axisLine: {
                    show: false
                }
            },
            series: [
                {
                    type: 'bar',
                    data: keywordValues.reverse().map((value, index) => {
                        const originalIndex = topKeywords.length - 1 - index;
                        return {
                            value: value,
                            itemStyle: {
                                color: getColorBySentiment(topKeywords[originalIndex].sentiment),
                                borderRadius: [0, 4, 4, 0]
                            }
                        };
                    }),
                    barWidth: '60%',
                    label: {
                        show: true,
                        position: 'right',
                        formatter: function(params) {
                            const originalIndex = topKeywords.length - 1 - params.dataIndex;
                            return `${keywordPercentages.reverse()[params.dataIndex]}%`;
                        },
                        fontSize: 11,
                        color: '#666',
                        distance: 5
                    }
                }
            ]
        };
        
        // Sunburst chart - display all word cloud data in hierarchical structure
        const sunburstChart = echarts.init(document.getElementById('sunburst'));
        
        // Create comprehensive sunburst data structure showing all terms
        // First level: Sentiment categories
        // Second level: Value ranges within each sentiment
        // Third level: Individual terms
        
        const createValueRanges = (items) => {
            const ranges = {
                'High (50+)': items.filter(item => item.value >= 50),
                'Medium (20-49)': items.filter(item => item.value >= 20 && item.value < 50),
                'Low (1-19)': items.filter(item => item.value < 20)
            };
            
            return Object.entries(ranges)
                .filter(([_, items]) => items.length > 0)
                .map(([rangeName, rangeItems]) => ({
                    name: rangeName,
                    value: rangeItems.reduce((sum, item) => sum + item.value, 0),
                    children: rangeItems.map(item => ({
                        name: item.name,
                        value: item.value,
                        itemStyle: {
                            color: item.sentiment === 'positive' ? '#4CAF50' : 
                                   item.sentiment === 'negative' ? '#F44336' : '#FFC107'
                        }
                    }))
                }));
        };
        
        // Group all themeData by sentiment
        const allSentimentGroups = themeData.reduce((groups, item) => {
            if (!groups[item.sentiment]) {
                groups[item.sentiment] = [];
            }
            groups[item.sentiment].push(item);
            return groups;
        }, {});
        
        // Create comprehensive sunburst data structure
        const comprehensiveSunburstData = Object.keys(allSentimentGroups).map(sentiment => {
            const items = allSentimentGroups[sentiment];
            const totalValue = items.reduce((sum, item) => sum + item.value, 0);
            const valueRanges = createValueRanges(items);
            
            return {
                name: `${sentiment.charAt(0).toUpperCase() + sentiment.slice(1)} (${items.length} terms)`,
                value: totalValue,
                itemStyle: {
                    color: sentiment === 'positive' ? '#4CAF50' : 
                           sentiment === 'negative' ? '#F44336' : '#FFC107',
                    opacity: 0.8
                },
                children: valueRanges
            };
        });
        
        const sunburstOption = {
            title: {
                text: '全部词云数据层次分析',
                left: 'center',
                textStyle: {
                    fontSize: 16,
                    fontWeight: 'bold'
                }
            },
            series: {
                type: 'sunburst',
                data: comprehensiveSunburstData,
                radius: [0, '85%'],
                center: ['50%', '55%'],
                sort: null,
                label: {
                    rotate: 'radial',
                    fontSize: 10,
                    minAngle: 5,
                    silent: false
                },
                itemStyle: {
                    borderRadius: 5,
                    borderWidth: 2,
                    borderColor: '#fff'
                },
                emphasis: {
                    focus: 'ancestor',
                    itemStyle: {
                        shadowBlur: 10,
                        shadowColor: 'rgba(0, 0, 0, 0.3)'
                    }
                },
                levels: [
                    {},
                    {
                        r0: '15%',
                        r: '35%',
                        itemStyle: {
                            borderWidth: 2
                        },
                        label: {
                            rotate: 'tangential',
                            fontSize: 12,
                            fontWeight: 'bold'
                        }
                    },
                    {
                        r0: '35%',
                        r: '60%',
                        label: {
                            fontSize: 10
                        }
                    },
                    {
                        r0: '60%',
                        r: '85%',
                        label: {
                            position: 'outside',
                            padding: 3,
                            silent: false,
                            fontSize: 9
                        },
                        itemStyle: {
                            borderWidth: 1
                        }
                    }
                ]
            },
            tooltip: {
                trigger: 'item',
                formatter: function(params) {
                    const level = params.treePathInfo.length;
                    if (level === 1) {
                        return `<strong>${params.name}</strong><br/>总提及数: ${params.value}<br/>占比: ${(params.percent).toFixed(1)}%`;
                    } else if (level === 2) {
                        return `<strong>${params.name}</strong><br/>提及数: ${params.value}<br/>占该情绪比例: ${(params.percent).toFixed(1)}%`;
                    } else {
                        return `<strong>${params.name}</strong><br/>提及数: ${params.value}`;
                    }
                }
            }
        };
        
        // Create theme table
        function createThemeTable() {
            const tableContainer = document.getElementById('themeTable');
            
            // Group data by keyword name and calculate sentiment percentages
            const keywordStats = {};
            const totalValue = themeData.reduce((sum, item) => sum + item.value, 0);
            
            // First pass: collect all data for each keyword
            themeData.forEach(item => {
                if (!keywordStats[item.name]) {
                    keywordStats[item.name] = {
                        total: 0,
                        positive: 0,
                        negative: 0,
                        neutral: 0
                    };
                }
                keywordStats[item.name].total += item.value;
                keywordStats[item.name][item.sentiment] += item.value;
            });
            
            // Convert to array and sort by total value
            const sortedKeywords = Object.entries(keywordStats)
                .map(([name, stats]) => ({
                    name,
                    totalPercentage: ((stats.total / totalValue) * 100).toFixed(0),
                    positivePercentage: stats.total > 0 ? ((stats.positive / stats.total) * 100).toFixed(0) : '0',
                    negativePercentage: stats.total > 0 ? ((stats.negative / stats.total) * 100).toFixed(0) : '0'
                }))
                .sort((a, b) => parseInt(b.totalPercentage) - parseInt(a.totalPercentage))
                .slice(0, 15); // Show top 15 keywords
            
            // Create table HTML with three-column layout
            let tableHTML = `
                <table style="width: 100%; border-collapse: collapse; text-align: center; font-family: Arial, sans-serif;">
                    <thead>
                        <tr style="background-color: #f5f5f5; border-bottom: 2px solid #ddd;">
                            <th style="padding: 15px 10px; border-right: 1px solid #ddd; font-weight: 600; color: #333;">
                                Results <span style="font-size: 12px;">▼</span>
                            </th>
                            <th style="padding: 15px 10px; border-right: 1px solid #ddd; font-weight: 600; color: #333;">
                                Positive
                            </th>
                            <th style="padding: 15px 10px; font-weight: 600; color: #333;">
                                Negative
                            </th>
                        </tr>
                    </thead>
                    <tbody>
            `;
            
            sortedKeywords.forEach((item, index) => {
                const rowBg = index % 2 === 0 ? '#ffffff' : '#f9f9f9';
                tableHTML += `
                    <tr style="background-color: ${rowBg}; border-bottom: 1px solid #eee;">
                        <td style="padding: 12px 10px; border-right: 1px solid #eee; text-align: left;">
                            <div style="display: flex; align-items: center; justify-content: space-between;">
                                <span style="font-weight: 500; color: #333;">${item.name}</span>
                                <div style="display: flex; align-items: center; gap: 8px;">
                                    <div style="width: 8px; height: 8px; border-radius: 50%; background-color: #4CAF50;"></div>
                                    <span style="font-weight: 600; color: #333;">${item.totalPercentage}%</span>
                                </div>
                            </div>
                        </td>
                        <td style="padding: 12px 10px; border-right: 1px solid #eee;">
                            <div style="display: flex; align-items: center; justify-content: center; gap: 8px;">
                                <div style="width: 8px; height: 8px; border-radius: 50%; background-color: #4CAF50;"></div>
                                <span style="font-weight: 600; color: #333;">${item.positivePercentage}%</span>
                            </div>
                        </td>
                        <td style="padding: 12px 10px;">
                            <div style="display: flex; align-items: center; justify-content: center; gap: 8px;">
                                <div style="width: 8px; height: 8px; border-radius: 50%; background-color: #F44336;"></div>
                                <span style="font-weight: 600; color: #333;">${item.negativePercentage}%</span>
                            </div>
                        </td>
                    </tr>
                `;
            });
            
            tableHTML += `
                    </tbody>
                </table>
            `;
            
            tableContainer.innerHTML = tableHTML;
        }
        
        // Create trend list
        function createTrendList() {
            // Trend list is already created in HTML
            // No additional processing needed as we've already defined the content in HTML
        }
        
        // Initialize the visualization dropdown handler
        const visualizationDropdown = document.getElementById('visualizationDropdown');
        if (visualizationDropdown) {
            visualizationDropdown.addEventListener('change', function() {
                const selectedValue = this.value;
                
                // Hide all visualizations
                const elementsToHide = ['wordCloud', 'barChart', 'themeTable', 'trendList', 'sunburst'];
                elementsToHide.forEach(id => {
                    const element = document.getElementById(id);
                    if (element) {
                        element.style.display = 'none';
                    }
                });
                
                // Show the selected visualization
                 let elementToShow = selectedValue;
                 if (selectedValue === 'table') {
                     elementToShow = 'themeTable';
                 }
                 
                 const selectedElement = document.getElementById(elementToShow);
                 if (selectedElement) {
                     selectedElement.style.display = 'block';
                 }
                 
                 // Initialize or resize charts if needed
                 if (selectedValue === 'barChart') {
                     barChart.setOption(barChartOption);
                     barChart.resize();
                 } else if (selectedValue === 'wordCloud') {
                     wordCloudChart.setOption(wordCloudOption);
                     wordCloudChart.resize();
                 } else if (selectedValue === 'sunburst') {
                     sunburstChart.setOption(sunburstOption);
                     sunburstChart.resize();
                 } else if (selectedValue === 'table') {
                     createThemeTable();
                 } else if (selectedValue === 'trendList') {
                     // Trend list is already created in HTML
                 }
             });
         }
         
         // Initialize all charts when page loads
         window.addEventListener('load', function() {
             // Initialize word cloud
             initWordCloud();
             
             // Initialize other charts
             barChart.setOption(barChartOption);
             sunburstChart.setOption(sunburstOption);
             
             // Set default visualization
             const dropdown = document.getElementById('visualizationDropdown');
             const wordCloudElement = document.getElementById('wordCloud');
             if (dropdown) {
                 dropdown.value = 'wordCloud';
             }
             if (wordCloudElement) {
                 wordCloudElement.style.display = 'block';
             }
         });
        
        // Responsive adjustments
        window.addEventListener('resize', function() {
            timeChart.resize();
            sentimentChart.resize();
            countriesChart.resize();
            languagesChart.resize();
            mediaTypesChart.resize();
            wordCloudChart.resize();
            barChart.resize();
            sunburstChart.resize();
        });
    </script>
</body>
</html>
